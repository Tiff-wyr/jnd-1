<template>
  <div class="secure-center">
    <div class="title">安全中心</div>
    <div class="secure-item">
      <div class="clearfix">
        <div class="text-password fll">账户密码</div>
        <div class="text-xiu flr" @click="amend('password')" v-model="passText">{{passText}}</div>
      </div>
      <div>
        <div class="text" v-if="isPassword">当前密码强度：<span>{{this.$store.state.userInfo.level}}</span></div>
        <div v-else class="password-item">

          <div class="person-item clearfix">
            <div class="fll person-text">当前密码：</div>
            <input type="password" class="fll ml10" v-model="oldPassword">
          </div>

          <div class="person-item clearfix">
            <div class="fll person-text">新密码：</div>
            <input type="password" class="fll ml10" v-model="newPassword" @change="passwordCon" @keyup="checkPassword">
            <div class="level clearfix fll" v-if="level > 0">
              <div :class="level >= 1 ? 'level-item item' : 'level-item' "></div>
              <div :class="level >= 2 ? 'level-item item' : 'level-item' "></div>
              <div :class="level === 3 ? 'level-item item' : 'level-item' "></div>
            </div>
            <span class="level-text fll">{{level === 1 ? '弱' : level === 2 ? '中' : level === 3 ? '强' : ''}}</span>
          </div>


          <div class="pwd-wran" v-if="newPassword.length < 6">
            密码长度6~10位，字母数字组合
          </div>


          <div class="person-item clearfix">
            <div class="fll person-text">确认密码：</div>
            <input type="password" class="fll ml10" v-model="confirmPassword">
          </div>
          <div class="btn" @click="savePassword">保存</div>
        </div>
      </div>

    </div>
    <div class="secure-item">
      <div class="clearfix">
        <div class="text-password fll">绑定手机</div>
        <div class="text-xiu flr" @click="amend('number')" v-model="numText">{{numText}}</div>
      </div>
      <div>
        <div class="text" v-if="isNumber">已绑定手机号：<span>{{this.$store.state.userInfo.phone}}</span></div>
        <div v-if="isDouble">
          <div class="password-item" v-if="isNext">
            <div class="person-item clearfix">
              <div class="fll person-text">旧手机号：</div>
              <div class="fll ml10 num-text" v-model="formCode.oldPhone">{{this.$store.state.userInfo.phone}}</div>
            </div>
            <div class="person-item clearfix">
              <div class="fll person-text">手机验证码：</div>
              <input type="text" class="fll ml10" style="width: 100px" v-model="formCode.oldCode">
              <div class="fll verify">
                <div class="send" v-if="showing" @click="send" v-model="verifyCode">{{verifyCode}}</div>
                <div v-else class="time send" v-model="time">{{time}}s</div>
              </div>
            </div>
            <div class="btn" @click="next">下一步</div>
          </div>
          <div v-else class="password-item">
            <div class="person-item clearfix">
              <div class="fll person-text">新手机号：</div>
              <input type="text" class="fll ml10" v-model="formCode.newPhone">
            </div>
            <div class="person-item clearfix">
              <div class="fll person-text">手机验证码：</div>
              <input type="text" class="fll ml10" style="width: 100px" v-model="formCode.newCode">
              <div class="fll verify">
                <div class="send" v-if="show" @click="sendCode" v-model="verify">{{verify}}</div>
                <div v-else class="time send" v-model="timer">{{timer}}s</div>
              </div>
            </div>
            <div class="btn" @click="binding" style="margin-left: 120px">绑定</div>
          </div>
        </div>
      </div>

    </div>
    <div class="secure-item">
      <div class="clearfix">
        <div class="text-password fll">绑定邮箱</div>
        <div class="text-xiu flr" @click="amend('postbox')" v-model="emailText">{{emailText}}</div>
      </div>
      <div>
        <div class="text" v-if="isPassBox">已绑定邮箱：<span>{{email}}</span></div>
        <div v-else class="password-item">
          <el-form label-position="right" :model="formCode" label-width="100px" :rules="rules">
            <el-form-item label="输入新邮箱：" prop="newEmail" style="margin-left: 10px;">
              <el-input v-model="formCode.newEmail" type="text" style="width: 190px;height: 40px;" @change="checkEmail">
              </el-input>
            </el-form-item>
          </el-form>

          <div class="person-item clearfix">
            <div class="fll person-text">邮箱验证码：</div>
            <input type="text" class="fll ml10" style="width: 100px" v-model="formCode.emailCode">
            <div class="fll verify">
              <div class="send" v-if="isShow" @click="sendEmail" v-model="verifyEmail">{{verifyEmail}}</div>
              <div v-else class="time send" v-model="timing">{{timing}}s</div>
            </div>
          </div>
          <div class="btn" @click="saveEmail" style="margin-left: 120px">保存</div>
        </div>
      </div>

    </div>
    <div class="add-white"></div>
  </div>
</template>

<script>
  import {mapMutations} from 'vuex'
  import validater from '../util/validater'
  export default {
    name: "secuCen",
    data(){
      return {
        level: 0 ,  //密码等级
        passwordQ:false,
        email:'',
        isPassword:true,
        isNumber:true,
        isPassBox:true,
        showing:true,
        show:true,
        isShow:true,

        time:59,
        timer:59,
        timing:59,
        formCode:{
          oldCode:'',
          newCode:'',
          oldPhone:'',
          newPhone:'',
          newEmail:'',
          emailCode:'',
        },
        verifyCode:'发送验证码',
        verify:'发送验证码',
        verifyEmail:'邮箱验证码',
        isNext:true,
        isDouble:false,
        passText:'修改',
        numText:'修改',
        emailText:'修改',
        oldPassword:'',
        newPassword:'',
        confirmPassword:'',
        rules:{
          newEmail:[
            { validator:validater.emailValue , trigger: 'change' },
          ]
        }
      }
    },
    methods:{
      ...mapMutations(['SET_USER_PHONE']),
      //校验密码
      checkPassword () {
        let checkChar = /[a-zA-Z]/g
        let checkNum = /[0-9]/g
        if (this.newPassword.length >= 6) {
          if (checkChar.test(this.newPassword) && checkNum.test(this.newPassword)) {
            this.level = 2
            if (this.newPassword.length > 8) this.level = 3
          } else if ((checkChar.test(this.newPassword) || checkNum.test(this.newPassword)) && this.newPassword.length > 8) {
            this.level = 2
          }
        } else if(this.newPassword.length > 0) {
          this.level = 1
        } else {
          this.level = 0
        }
      },
      amend(text){
        if(text === 'password'){
          this.isPassword=!this.isPassword
          if(this.isPassword === false){
            this.passText='收起'
            this.oldPassword=''
            this.newPassword=''
            this.confirmPassword=''
          }else {
            this.passText='修改'
          }
        }
        else if(text === 'number'){
          this.isNumber=!this.isNumber
          this.isDouble=!this.isDouble
          this.isNext=true
          if(this.isNumber === false){
            this.numText='收起'
            this.formCode={
              oldCode:'',
              newCode:'',
              oldPhone:'',
              newPhone:'',
            }
          }else {
            this.numText='修改'
          }
        }else{
          this.isPassBox=!this.isPassBox
          if(this.isPassBox === false){
            this.emailText='收起'
            this.formCode.newEmail=''
            this.isShow=true
            this.verifyEmail="邮箱验证码"

          }else {
            this.emailText='修改'

          }
        }
      },
      //  获取验证码
      send(){
        this.showing=false;
        this.$axios.post(`base/getUpdatePhoneCode/${this.$store.state.userInfo.phone}`).then(res => {
          let timer=setInterval(()=>{
            this.time--
            if(this.time < 0){
              clearInterval(timer)
              this.showing=true
              this.verifyCode='重新获取'
              this.time=60
            }
          },1000)
        })
      },
      sendCode(){
        //检测手机已注册
        this.$axios.get(`user/checkUserByPhone/${this.formCode.newPhone}`).then(res=>{
          console.log(res);
          if(res.status === 500){
            this.$message.warning(res.msg)
            this.formCode.newPhone=''
          }else if(res.status === 200){
            this.show=false;
            this.$axios.post(`base/getUpdatePhoneCode/${this.formCode.newPhone}`).then(res => {
              let timer=setInterval(()=>{
                this.timer--
                if(this.timer < 0){
                  clearInterval(timer)
                  this.show=true
                  this.verify='重新获取'
                  this.timer=59
                }
              },1000)
            })
          }
        })

      },
      //发送邮箱验证码
      sendEmail(){
        if(this.formCode.newEmail){
          this.$axios.get(`email/sendEmailCode?email=${this.formCode.newEmail}`).then(res => {
            if(res.status === 200){
              this.isShow=false;
              let timer=setInterval(()=>{
                this.timing--
                if(this.timing < 0){
                  clearInterval(timer)
                  this.isShow=true
                  this.verifyEmail='重新获取'
                  this.timing=59
                }
              },1000)
            }else{
              this.verifyEmail='重新获取'
            }
          })
        }else{
          this.$message.warning("不能为空")
        }
      },
      //密码 不能一致
      passwordCon(){
        if(this.oldPassword && this.newPassword){
          if(this.oldPassword === this.newPassword){
            this.$message.warning("密码一致，请重新修改")
            this.newPassword=''
          }
        }else{
          this.$message.warning("当前密码不能为空")
        }
      },
      //  修改密码
      savePassword(){
        let le=this.level === 1? '弱' : (this.level === 2 ? '中' : '强')
        if(this.oldPassword && this.newPassword && this.confirmPassword){
          if(this.newPassword === this.confirmPassword){
            this.$axios.get(`user/updatePasswordByPhone/${this.$store.state.userInfo.phone}/${this.oldPassword}/${this.newPassword}/${le}`).then(res=>{
              if(res.status === 500){
                this.$message.warning(res.msg)
                this.oldPassword=''
              }else{
                this.$message.success(res.msg)
                this.isPassword=true
                this.passwordQ=true
                this.passText='修改'
              }
            })
          }else {
            this.$message.error("两次输入的密码不一致")
          }
        }else{
          this.$message.warning("不能为空")
        }


      },
      //下一步 修改手机号
      next(){
        if(this.formCode.oldCode){
          this.$axios.get(`user/checkCode/${this.$store.state.userInfo.phone}/${this.formCode.oldCode}`).then(res=>{
            if(res.status === 200){
              setTimeout(()=>{
                this.isNext=!this.isNext
              },1000)
            }else{
              this.$message.warning("验证码错误")
            }
          })
        }else{
          this.$message.warning("验证码不能为空")
        }


      },
      //绑定手机号
      binding(){
        this.$axios.get(`user/updatePhone/${this.$store.state.userInfo.phone}/${this.formCode.newPhone}/${this.formCode.newCode}`).then(res=>{
          this.$message.success(res.msg)
          this.SET_USER_PHONE(this.formCode.newPhone)


        })
      },
      //邮箱修改
      saveEmail(){
        if(this.formCode.newEmail && this.formCode.emailCode){
          this.$axios.get(`/email/modifyEmail/${this.$store.state.userInfo.id}/${this.$store.state.userInfo.roleId}/${this.formCode.emailCode}?email=${this.formCode.newEmail}`).then(res=>{
            console.log(res);
            if(res.status === 505){
              this.$message.warning(res.msg)
            }else{
              this.$message.success(res.msg)
            }
          })
        }else{
          this.$message.warning("不能为空")
        }
      },
      getData(){
        this.$axios.get(`/userBorrower/updateBorrowerById/${this.$store.state.userInfo.id}`).then(res=>{
          this.email=res.email
        })
      },
      checkEmail(){
        this.formCode.newEmail=this.formCode.newEmail.trim()
        this.$axios.post(`check/checkEmail?email=${this.formCode.newEmail}`).then(res=>{
          if(res.status === 500){
            this.$message.warning(res.msg)
            this.formCode.newEmail=''
          }
        })
      }
    },
    created(){
      this.getData()
      this.checkPassword()
    }
  }
</script>

<style scoped lang="scss">
  /deep/ .el-input__inner{
    height: 32px;
    line-height: 32px;
  }
  .ml10{
    margin-left: 10px;
  }
  .secure-center{
    width: 944px;
    background-color: #fff;
    .title{
      height:66px;
      padding-left: 56px;
      box-sizing: border-box;
      font-size:16px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(81,81,81,1);
      line-height:66px;
    }
    .secure-item{
      padding: 19px 56px 24px 56px;
      border-bottom: 1px solid #f0f0f0;
      .text-password{
        width:56px;
        height:14px;
        font-size:14px;
        font-family:PingFangSC-Medium;
        font-weight:500;
        color:rgba(81,81,81,1);
        line-height:14px;
      }
      .text-xiu{
        cursor: pointer;
        margin-right: 50px;
        width:24px;
        height:12px;
        font-size:12px;
        font-family:PingFangSC-Regular;
        font-weight:400;
        color:rgba(208,172,86,1);
        line-height:12px;
      }
      .text{
        height:12px;
        font-size:12px;
        font-family:PingFangSC-Regular;
        font-weight:400;
        color:rgba(155,155,155,1);
        line-height:12px;
        margin-top: 14px;
        span{
          color: #A80E0E;
        }
      }
      .password-item{
        padding: 23px 0 0 100px;
        border-top: 1px dashed #f0f0f0;
        margin-top: 20px;
        .person-item{
          margin-top: 10px;
          .verify{
            .send{
              text-align: center;
              width:70px;
              height:30px;
              border-radius:4px;
              border:1px solid #ccc;
              font-size:12px;
              font-family:PingFangSC-Medium;
              font-weight:500;
              color:rgba(155,155,155,1);
              line-height:30px;
              margin-left: 15px;
              cursor: pointer;
            }
            .time{
              font-size: 16px;
              color: #888;
            }
          }
          .person-text{
            text-align: right;
            width: 100px;
            height:32px;
            font-size:14px;
            font-family:PingFangSC-Regular;
            font-weight:400;
            color:rgba(155,155,155,1);
            line-height:32px;
          }
          .num-text{
            height:32px;
            font-size:14px;
            font-family:PingFangSC-Regular;
            font-weight:400;
            color:rgba(155,155,155,1);
            line-height:32px;
          }
          input{
            width: 180px;
            height: 32px;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 13px 10px;
            box-sizing: border-box;
            font-size:14px;
            font-family:PingFangSC-Regular;
            font-weight:400;
            color:rgba(81,81,81,1);
            line-height:32px;
          }
        }
        .btn{
          text-align: center;
          width:60px;
          height:32px;
          background:rgba(168,14,14,1);
          border-radius:3px;
          font-size:12px;
          font-family:PingFangSC-Regular;
          font-weight:400;
          color:rgba(255,255,255,1);
          line-height:32px;
          margin-left: 90px;
          margin-top: 10px;
          cursor: pointer;
        }

      }
      .level {
        display: inline-block;
        margin-top: 10px;

        .level-item {
          float: left;
          margin-left: 2px;
          width: 25px;
          height: 8px;
          border: 1px solid #eee;
        }
        .item {
          background: #0f0;
        }
      }
      .level-text {
        font-size: 14px;
        color: #666;
        margin-left: 5px;
        height: 32px;
        line-height: 32px;
      }
      .pwd-wran {
        font-size: 10px;
        color: #a80e0e;
        margin-bottom: 10px;
        margin-top: 10px;
        margin-left: 118px;
      }
    }
    .add-white{
      width: 100%;
      height: 60px;
    }
    /deep/ .el-form-item__label{
      color: #9b9b9b;
    }
  }
</style>
