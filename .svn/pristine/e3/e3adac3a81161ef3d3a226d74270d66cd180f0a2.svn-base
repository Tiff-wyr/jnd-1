<template>
<div>
  <registerTop></registerTop>
  <div class="wrappy">
    <div class="w900">
      <div class="user-main">
        <div class="user-title">
            <div class="title">欢迎注册就能贷网</div>
            <div class="number">已有账号，</div>
            <div class="login" @click="loginPush">立即登陆</div>
          </div>

        <el-form label-position="right" :model="form" label-width="80px" :rules="rules">
          <div class="user-form">
            <div class="person-item clearfix">
              <el-form-item label="姓名:" prop="borrowerName" style="width: 300px;">
                <el-input v-model="form.borrowerName" type="text">
                </el-input>
              </el-form-item>
            </div>
            <div class="person-item clearfix">
              <el-form-item label="性别:" prop="borrowerSex">
                <el-radio-group v-model="form.borrowerSex">
                  <el-radio :label="1" :value="1">男</el-radio>
                  <el-radio :label="0" :value="0">女</el-radio>
                </el-radio-group>
              </el-form-item>
            </div>
            <div class="person-item clearfix">
              <el-form-item label="所在地:" prop="borrowerAddress">
                <el-select v-model="form.borrowerAddress" style="width: 140px;"  @change="getCity">
                  <el-option
                    v-for="item in provinceData"
                    :key="item.pid"
                    :label="item.provincial"
                    :value="item.pid"
                    style="width: 140px;"
                  >
                  </el-option>
                </el-select>
                <el-select v-model="form.borrower2" style="margin-left: 10px;width: 140px;">
                  <el-option
                    style="width: 140px;"
                    v-for="item in cityData"
                    :key="item.cid"
                    :label="item.city"
                    :value="item.cid">
                  </el-option>
                </el-select>
              </el-form-item>
            </div>
            <div class="person-item clearfix">
              <el-form-item label="手机号:" prop="phone" style="width: 300px;">
                <el-input type="text" v-model="form.phone" autocomplete="off" @change="checkPhone"></el-input>
              </el-form-item>
            </div>
            <div class="person-item clearfix">
              <el-form-item label="验证码:" prop="password" style="width: 180px; float: left">
                <el-input type="text" v-model="form.password" autocomplete="off"></el-input>
              </el-form-item>
              <div class="fll verify">
                <div class="send" v-if="showing" @click="send" v-model="verifyCode">{{verifyCode}}</div>
                <div v-else class="time send" v-model="time">{{time}}s</div>
              </div>
            </div>
          </div>
        </el-form>

        <div class="clearfix register">
          <div class="agree" @click="register">同意协议并注册</div>
          <div class="immediate" @click="$router.push({path:'/home',query:{login:1}})">已有账号？立即登陆</div>
        </div>
        <div class="agreement">《就能贷用户注册协议》</div>
      </div>
    </div>
  </div>

</div>
</template>

<script>
  import registerTop from '../component/registerTop'
  import {mapState, mapMutations} from 'vuex'
  import validater from '../util/validater'
    export default {
      name: "userRegister",
      components:{
          registerTop
      },
      computed: {
        ...mapState(['userInfo'])
      },
      data () {
        return {
          showing:true,
          time:60,
          verifyCode:'发送验证码',
          form: {
            phone: '',
            borrowerName: '',
            borrowerSex: 1,
            borrowerAddress: '',
            borrower2:'',
            password: '',
          },
          //省
          provinceData:[
            {
              pid:'',
              provincial:'',
            }
          ],
          //市 区
          cityData:[
            {
              cid:'',
              city:'',
              pid:'',
            }
          ],

          rules: {
            phone: [
              { validator:validater.phoneNumber , trigger: 'blur' },
              { required: true, trigger: 'blur', message: '手机号不能为空'}
            ],
            password: [
              { required: true, trigger: 'blur', message: '验证码不能为空'}
            ],
            borrowerName: [
              { required: true, trigger: 'blur', message: '姓名不能为空'}
            ],
            borrowerSex: [
              { required: true, trigger: 'blur', message: '必填'}
            ],
            borrowerAddress: [
              { required: true, trigger: 'blur', message: '必填'}
            ],
            borrower2:[
              { required: true, trigger: 'blur', message: '必填'}
            ]
          }
        };
      },
      methods:{
        ...mapMutations(['SET_USER']),
        loginPush(){
          this.$router.push({path:'/home',query:{login:1}})
        },
        //  获取验证码
        send(){
          if (this.form.phone) {
            this.$axios.get(`base/getRegisterCode/${this.form.phone}`).then(res => {
              if(res.status === 200){
                this.showing=false;
                let timer=setInterval(()=>{
                  this.time--
                  if(this.time < 0){
                    clearInterval(timer)
                    this.showing=true
                    this.verifyCode='重新获取'
                    this.time=60
                  }
                },1000)
              }else{
                this.$message.warning(res.msg)
                this.verifyCode="重新获取"
              }

            })
          } else {
            this.$message.warning('请输入手机号')
          }
        },
        // 注册
        register(){
          this.checkForm().then(()=> {
            let data = new FormData()
            for(let item in this.form) {
              data.append(item, this.form[item])
            }
            this.$axios.post('userBorrower/registerBorrower', data).then(res => {
              if(res.status === 200){
                setTimeout(()=>{
                  this.$router.push({path:'/registerJump',query:{number:this.form.phone}})
                },1000)
              }else {
                this.$message.warning(res.msg)
              }


            })
          })
        },
      //  检测form数据
        checkForm() {
          return new Promise(resolve => {
            if (this.form.borrowerName === '') {
              this.$message.warning('用户名不能为空')
            }
            else if(this.form.borrowerAddress === ''){
              this.$message.warning('所在地不能为空')
            }
            else if(this.form.borrower2 === ''){
              this.$message.warning('所在地不能为空')
            }
            else if(this.form.phone === ''){
              this.$message.warning('手机号不能为空')
            }
            else if(this.form.password === '') {
              this.$message.warning('验证码不能为空')
            }
            else {
              resolve()
            }
          })
        },
      //  检测手机号是否被注册
        checkPhone() {
          if (this.form.phone) {
            this.form.phone=this.form.phone.trim()
            this.$axios.get(`user/selectPhone/${this.form.phone}`).then(res => {
              if(res.status === 200) {
                this.$message.warning("手机号已注册")
                this.form.phone = ''
              } else {
                return
              }
            })
          }
        },
        //获取省
        getProvince(){
          this.$axios.get('city/getAllProvincial').then(res=>{
            this.provinceData=res
          })
        },
        //获取 市 区
        getCity(val){
          this.$axios.get(`city/getAllCity/${val}`).then(res=>{
            this.cityData=res
          })
        },
      },
      created(){
        this.getProvince()
      },
    }
</script>

<style scoped lang="scss">
  .w900{
    width: 900px;
    margin: 0 auto;
  }
  .ml20{
    margin-left: 20px;
  }
  .user-main{
    height:600px;
    position: relative;
    background:rgba(255,255,255,1);
    .user-title{
      width: 100%;
      height: 90px;
      border-bottom: 1px solid #eee;
      position: relative;
      .title{
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%,-50%);
        font-size:24px;
        font-family:PingFangSC-Medium;
        font-weight:500;
        color:rgba(81,81,81,1);
      }
      .number{
        opacity: 0.5;
        position: absolute;
        left: 655px;
        top: 40px;
        font-size:14px;
        font-family:PingFangSC-Medium;
        font-weight:500;
        color:rgba(81,81,81,1);
      }
      .login{
        position: absolute;
        left:720px;
        top: 40px;
        font-size:14px;
        cursor: pointer;
        font-family:PingFangSC-Medium;
        font-weight:500;
        color: rgba(168, 14, 14, 1);
      }
    }
    .user-form{
      width: 380px;
      margin: 20px auto;
      .person-item{
          .verify{
            .send{
              text-align: center;
              width:80px;
              height:38px;
              border-radius:4px;
              border:1px solid #ccc;
              font-size:12px;
              font-family:PingFangSC-Medium;
              font-weight:500;
              color:rgba(155,155,155,1);
              line-height:38px;
              margin-left: 20px;
              cursor: pointer;
            }
            .time{
              font-size: 16px;
              color: #888;
            }
          }
          .person-text{
            text-align: right;
            width:70px;
            height:40px;
            font-size:14px;
            font-family:PingFangSC-Regular;
            font-weight:400;
            color:rgba(81,81,81,1);
            line-height:40px;
          }
          input{
            width: 250px;
            height: 40px;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 13px 10px;
            box-sizing: border-box;
            font-size:14px;
            font-family:PingFangSC-Regular;
            font-weight:400;
            color:rgba(81,81,81,1);
            line-height:40px;
          }
          .name,.card{
            width: 100px;
            height: 40px;
          }
          .radio{
            margin-top: 9px;
            margin-left: 19px;
          }
          /deep/ .el-radio__label{
            color: #aaa;
          }
          /deep/ .is-checked .el-radio__inner{
            border-color: #333;
            background: #fff;
            &:after{
              background-color: #333;
            }
          }
          /deep/ .is-checked+.el-radio__label {
            color: #333;
          }
          /deep/ .el-radio__inner:hover{
            border-color: #333;
          }
        }
    }
    .agreement{
      margin: 20px auto;
      width:132px;
      height:12px;
      font-size:12px;
      font-family:PingFangSC-Regular;
      font-weight:400;
      color:rgba(74,144,226,1);
      line-height:12px;
    }
    .immediate{
      display: inline-block;
      width:120px;
      height:40px;
      font-size:12px;
      cursor: pointer;
      font-family:PingFangSC-Regular;
      font-weight:400;
      color:rgba(74,144,226,1);
      line-height:40px;
      margin-left: 20px;
    }
    .agree{
      display: inline-block;
      width:280px;
      height:40px;
      background:rgba(168,14,14,1);
      cursor: pointer;
      font-size:16px;
      font-family:PingFangSC-Regular;
      font-weight:400;
      color:rgba(255,255,255,1);
      line-height:40px;
      text-align: center;
      border-radius: 5px;
    }
    .register{
      width: 280px;
      white-space: nowrap;
      margin: auto;
    }
  }
  /deep/ .el-input__inner{
    padding: 0 5px;
  }

</style>
